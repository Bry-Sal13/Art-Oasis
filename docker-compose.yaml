# volumes:
volumes:
  postgres-data:
    external: true
services:
  users-api:
    build:
      context: users
      dockerfile: Dockerfile.dev
    ports:
      - 8000:80
    volumes:
      - ./users:/app
    environment:
      DATABASE_URL: ${USERS_DATABASE_URL}
      SIGNING_KEY: ${USERS_SIGNING_KEY}
      WAIT_HOSTS: postgres:5432
      CORS_HOST: http://localhost:3000
    depends_on:
      - postgres
  posts-api:
    build:
      context: posts
      dockerfile: Dockerfile.dev
    ports:
      - 8010:80
    volumes:
      - ./posts:/app
    environment:
      DATABASE_URL: ${POSTS_DATABASE_URL}
      SIGNING_KEY: ${POSTS_SIGNING_KEY}
      WAIT_HOSTS: postgres:5432
    depends_on:
      - postgres
  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql
    environment:
      - POSTGRES_MULTIPLE_DATABASES=users,posts
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: ${REACT_APP_SAMPLE_SERVICE_API_HOST}
      WATCHPACK_POLLING: true
